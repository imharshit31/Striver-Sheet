vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        
    int n = nums.size();
    deque<int> dq;
    vector<int> ans;

    for(int i=0;i<k;i++){
        while(dq.size() and dq.back()<nums[i]) dq.pop_back();
        dq.push_back(nums[i]);
        while(dq.front()<nums[i]) dq.pop_front();
    }

    ans.push_back(dq.front());

    for(int i=k;i<n;i++){
        while(dq.size() and dq.back()<nums[i]) dq.pop_back();
        dq.push_back(nums[i]);
        if(dq.front()==nums[i-k]) dq.pop_front();
        while(dq.front()<nums[i]) dq.pop_front();
        ans.push_back(dq.front());
    }

    return ans;

}
