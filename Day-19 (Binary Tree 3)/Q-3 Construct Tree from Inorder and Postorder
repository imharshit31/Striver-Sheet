TreeNode* construct(vector<int> postorder, vector<int> inorder){
        
    if(postorder.size()==0) return NULL;

    TreeNode *root = new TreeNode(postorder[postorder.size()-1]);

    int i;
    vector<int> leftin,rightin,leftpost,rightpost;

    for(i=0;i<inorder.size();i++){
        if(inorder[i]==postorder[postorder.size()-1]) break;
        leftin.push_back(inorder[i]);
    }

    for(int ii=i+1;ii<inorder.size();ii++) rightin.push_back(inorder[ii]);

    for(int ii=0;ii<postorder.size()-1;ii++)
        if(ii<leftin.size()) leftpost.push_back(postorder[ii]);
        else rightpost.push_back(postorder[ii]);


    root->left = construct(leftpost,leftin);
    root->right = construct(rightpost,rightin);

    return root;

}

TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {

    TreeNode* root = construct(postorder,inorder);

    return root;

}
